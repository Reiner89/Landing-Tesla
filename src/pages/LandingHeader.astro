---
import Logo from "../components/Logo.astro";
---

<header id="landing-header" class="flex fixed items-center w-full top-0 py-3 px-8 z-40 justify-between text-white">
    <div class="flex flex-grow basis-0">
        <Logo/>
    </div>
    
    <nav>
        <ul class="hidden md:flex text-sm [&>li>a]:text-current [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:font-medium [&>li>a]:px-5 [&>li>a]:py-2 [&>li>a]:inline-block">
            <li><a href="#Model-S">Model S</a></li>
            <li><a href="#Model-3">Model 3</a></li>
            <li><a href="#Model-X">Model X</a></li>
            <li><a href="#Model-Y">Model Y</a></li>
            <li><a href="">Solar Roof</a></li>
            <li><a href="#Solar-Panels">Solar Panels</a></li>
            <li><a href="">PowerWall</a></li>
        </ul>
    </nav>

    <nav class="hidden md:flex flex-grow justify-end basis-0">
        <ul class="flex text-sm [&>li>a]:text-current [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:font-medium [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:inline-block sm:[&>li>a]:px-2">
            <li><a href="">Tienda</a></li>
            <li><a href="">Cuenta</a></li>
            <li><a href="">Men√∫</a></li>
        </ul>
    </nav>

    <button class="block md:hidden py-3 px-4 mx-2 rounded focus:outline-none hover:bg-gray-200 group">
        <div class="w-5 h-1 bg-gray-600 mb-1"></div>
        <div class="w-5 h-1 bg-gray-600 mb-1"></div>
        <div class="w-5 h-1 bg-gray-600"></div>
        <div class="absolute top-0 -right-full h-screen w-7/12 bg-white border opacity-0 group-focus:right-0
        group-focus:opacity-100 transition-all duration-300">
        <ul class="flex flex-col w-full text-base cursor-pointer pt-10 justify-items-start z-40">
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Model S</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Model 3</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Model X</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Model Y</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Power Wall</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Carga</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Soporte</li>
            <li class="text-black hover:bg-gray-200 py-4 px-6 w-full">Tienda</li>
        </ul>
    </div>
    </button>

    <div id="menu-backdrop" class="absolute bg-black/5 backdrop-blur-lg rounded
    translate-x-[var(--left)] translate-y-[var(--top)]
    left-0 top-0
    w-[var(--width)] h-[var(--height)]
    transition-all duration-500
    ease-in-out opacity-0 -z-10">
    </div>

</header>

<script>
    const listItem = document.querySelectorAll("#landing-header li")
    const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement
  
    listItem.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        const { left, top, width, height } = item.getBoundingClientRect()
  
        menuBackDrop.style.setProperty("--left", `${left}px`)
        menuBackDrop.style.setProperty("--top", `${top}px`)
        menuBackDrop.style.setProperty("--width", `${width}px`)
        menuBackDrop.style.setProperty("--height", `${height}px`)
  
        menuBackDrop.style.opacity = "1"
        menuBackDrop.style.visibility = "visible"
      })
  
      item.addEventListener("mouseleave", () => {
        menuBackDrop.style.opacity = "0"
        menuBackDrop.style.visibility = "hidden"
      })
    })
  </script>

  <script>
    const header = document.querySelector('#landing-header') as HTMLElement
    const observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.90
    }

    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        const { isIntersecting } = entry
        if (isIntersecting) {
          const color = entry.target.getAttribute('data-header-color')
          header.style.color = color
        }
      })
    }, observerOptions)

    const sections = document.querySelectorAll(".landing-section")
    sections.forEach((section) => observer.observe(section))

  </script>